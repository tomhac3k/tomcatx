---
# tasks file for tomcat10install
- name: Block to verify Enterprise linux versions
  block:
    - name: Verify OS Type and version
      debug:
        msg:
          - "Host OS Family is = {{ ansible_facts['os_family'] }}"
          - "Host Distribution Version is = {{ ansible_facts['distribution_version'] }}"

    - name: Install java openjdk
      yum:
        name: java-1.8.0-openjdk-devel
        state: installed

    - name: Install Neccessary Packages
      yum:
        name:
          - tar
          - git
        state: installed

    - name: Check Java Installation and Version
      command: "java -version"
      register: version

    - name: Displaying Java Installation and Version
      debug:
        var: version.stderr_lines

    - name: Download tomcat packages
      copy:
        src: apache-tomcat-10.0.27.tar.gz
        dest: "{{ tomcat_location }}apache-tomcat-10.0.27.tar.gz"

    - name: Extract tar Archive
      unarchive:
        src: "{{ tomcat_location }}apache-tomcat-10.0.27.tar.gz"
        dest: "{{ tomcat_location }}"
        remote_src: true

    - name: Rename Folder apache-tomcat-10.0.27 to tomcat10
      command: "mv {{ tomcat_location }}apache-tomcat-10.0.27 {{ tomcat_location }}tomcat10"
      ignore_errors: true

    - name: Create tomcat User
      user:
        name: tomcat
        state: present

    - name: Set tomcat Ownership and file Permissions 
      file:
        path: "{{ tomcat_location }}tomcat10"
        owner: tomcat
        group: tomcat
        recurse: true

    - name: Create tomcat service file
      template:
        src: tomcat.service.j2
        dest: /etc/systemd/system/tomcat.service

    - name: Reload systemd
      systemd:
        daemon-reload: true

    - name: Add firewall 8080 rule
      firewalld:
        port: 8080/tcp
        state: enabled
        permanent: true
        immediate: true

    - name: Start tomcat service
      service:
        name: tomcat
        state: started
        enabled: true

    - name: Wait for Tomcat to load.
      wait_for:
        msg: "Please Wait"
        timeout: 7

    - name: Load Tomcat URL
      uri:
        url: "http://{{ ansible_facts['fqdn'] }}:8080"
        status_code: 200
      register: url_status

    - name: Display Installation complete Message
      debug:
        msg: "Tomcat v10 Installation Complete on {{ ansible_facts['fqdn'] }}"
      when: url_status.status == 200
  when: 
    - ansible_facts['os_family'] == "RedHat"

- name: Deploy a JAVA application
  block:
    - name: Test URL status from local machine
      uri:
        url: "http://{{ item.test_url }}"
        status_code: 200
      loop: "{{ test_urls }}"
      delegate_to: localhost

    - name: Stop the tomcat service
      service:
        name: tomcat
        state: stopped

    - name: Backing previous version of the WAR files to {{ backup_location }} directory
      copy:
        src: '{{ tomcat_location }}{{ item.file_name }}.war'
        dest: '{{ backup_location }}{{ item.file_name }}.war'
        remote_src: yes
      loop: "{{ files }}"
      ignore_errors: yes

    - name: Remove the previous version of the WAR and expanded directory
      file:
        path: "{{ tomcat_location }}{{ item.file_name }}.war"
        state: absent
      loop: "{{ files }}"

    - name: Remove the previous version of the expanded directory
      file:
        path: '{{ tomcat_location }}{{ item.file_name }}'
        state: absent
      loop: "{{ files }}"

    - name: Verify the previous contents are gone
      command: "ls -al {{ tomcat_location }}"
      register: list_status

    - name: Display list
      debug:
        var: list_status.stdout_lines

    - name: Copy Deployment file to Document Root
      copy:
        src: '{{ item.war_src }}'
        dest: '{{ tomcat_location }}{{ item.war_dest }}'
      loop: "{{ new_wars }}"


    - name: Set file permissions on Document Root
      file: 
        path: '{{ tomcat_location }}{{ item.war_dest }}'
        mode: 0660
        owner: tomcat
        group: tomcat
      loop: "{{ new_wars }}"

    - name: Start tomcat service
      service:
        name: tomcat
        state: restarted

    - name: wait for 10 second for URL to load
      wait_for:
        timeout: 10

    - name: Verify JAVA Application is deployed
      command: 'ls -al {{ tomcat_location }}'
      register: list_status

    - name: Verify WAR file permissions
      debug:
        var: list_status.stdout_lines

    - name: URL status block
      block:
        - name: Run URL status
          uri:  
            url: 'http://{{ item.test_url }}'
            return_content: yes
            status_code: 200
          loop: "{{ test_urls }}"
          delegate_to: localhost

        - name: Display deployment status
          debug:
            msg: "WAR file Deployment successfully on {{ ansible_facts['fqdn'] }}"
